{% comment %}
  Contador Regresivo con Efecto Flip
{% endcomment %}

<div class="countdown-banner" style="background-color: {{ section.settings.background_color }};">
  <div class="countdown-container">
    <div class="countdown-text">
      <h2 style="color: {{ section.settings.text_color }};">{{ section.settings.title_text }}</h2>
    </div>
    <div class="countdown-timer">
      <div class="timer-group">
        <div class="flip-card" id="hours-card">
          <div class="flip-card-inner">
            <div class="flip-card-front">
              <span id="hours">00</span>
            </div>
            <div class="flip-card-back">
              <span id="hours-next">00</span>
            </div>
          </div>
        </div>
        <div class="timer-label">{{ section.settings.hours_label }}</div>
      </div>

      <div class="timer-separator">
        <div class="separator-dot top"></div>
        <div class="separator-dot bottom"></div>
      </div>

      <div class="timer-group">
        <div class="flip-card" id="minutes-card">
          <div class="flip-card-inner">
            <div class="flip-card-front">
              <span id="minutes">00</span>
            </div>
            <div class="flip-card-back">
              <span id="minutes-next">00</span>
            </div>
          </div>
        </div>
        <div class="timer-label">{{ section.settings.minutes_label }}</div>
      </div>

      <div class="timer-separator">
        <div class="separator-dot top"></div>
        <div class="separator-dot bottom"></div>
      </div>

      <div class="timer-group">
        <div class="flip-card" id="seconds-card">
          <div class="flip-card-inner">
            <div class="flip-card-front">
              <span id="seconds">00</span>
            </div>
            <div class="flip-card-back">
              <span id="seconds-next">00</span>
            </div>
          </div>
        </div>
        <div class="timer-label">{{ section.settings.seconds_label }}</div>
      </div>
    </div>
  </div>
</div>

<style>
  .countdown-banner {
    width: 100%;
    padding: 15px 0;
    background-color: #FF001D;
  }

  .countdown-container {
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 20px;
  }

  .countdown-text {
    width: 50%;
  }

  .countdown-text h2 {
    color: #FFFFFF;
    font-family: 'Montserrat', sans-serif;
    font-size: {{ section.settings.title_size }}px;
    font-weight: 700;
    line-height: 1.2;
    margin: 0;
    text-transform: uppercase;
  }

  .countdown-timer {
    width: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .timer-group {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .flip-card {
    background-color: #FFFFFF;
    width: {{ section.settings.timer_size }}px;
    height: {{ section.settings.timer_size }}px;
    perspective: 1000px;
    margin: 0 5px;
    border-radius: {{ section.settings.timer_border_radius }}px;
    position: relative;
    overflow: hidden;
  }

  .flip-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.3s;
    transform-style: preserve-3d;
  }

  .flip-card.flip .flip-card-inner {
    transform: rotateX(180deg);
  }

  .flip-card-front, .flip-card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #FFFFFF;
    color: #000000;
    font-size: calc({{ section.settings.timer_size }}px * 0.65);
    font-weight: bold;
  }

  .flip-card-front {
    transform: rotateX(0deg);
  }

  .flip-card-back {
    transform: rotateX(180deg);
  }

  .flip-card::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    height: 1px;
    background-color: rgba(0, 0, 0, 0.1);
    z-index: 10;
  }

  .timer-label {
    color: #FFFFFF;
    font-size: {{ section.settings.label_size }}px;
    margin-top: 5px;
    text-align: center;
  }

  .timer-separator {
    height: {{ section.settings.timer_size }}px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    margin: 0 10px;
    padding-bottom: 12px;
  }

  .separator-dot {
    width: 8px;
    height: 8px;
    background-color: #FFFFFF;
    border-radius: 50%;
    margin: 10px 0;
  }

  @media screen and (max-width: 768px) {
    .countdown-container {
      flex-direction: column;
    }

    .countdown-text, .countdown-timer {
      width: 100%;
    }

    .countdown-text {
      margin-bottom: 15px;
      text-align: center;
    }

    .countdown-text h2 {
      font-size: calc({{ section.settings.title_size }}px * 0.7);
    }

    .flip-card {
      width: calc({{ section.settings.timer_size }}px * 0.8);
      height: calc({{ section.settings.timer_size }}px * 0.8);
    }

    .flip-card-front, .flip-card-back {
      font-size: calc({{ section.settings.timer_size }}px * 0.5);
    }

    .timer-separator {
      height: calc({{ section.settings.timer_size }}px * 0.8);
      margin: 0 5px;
    }

    .separator-dot {
      width: 6px;
      height: 6px;
      margin: 8px 0;
    }
  }

  @media screen and (max-width: 480px) {
    .countdown-text h2 {
      font-size: calc({{ section.settings.title_size }}px * 0.5);
    }

    .flip-card {
      width: calc({{ section.settings.timer_size }}px * 0.6);
      height: calc({{ section.settings.timer_size }}px * 0.6);
    }

    .flip-card-front, .flip-card-back {
      font-size: calc({{ section.settings.timer_size }}px * 0.4);
    }

    .timer-label {
      font-size: calc({{ section.settings.label_size }}px * 0.8);
    }

    .timer-separator {
      height: calc({{ section.settings.timer_size }}px * 0.6);
      margin: 0 3px;
    }

    .separator-dot {
      width: 4px;
      height: 4px;
      margin: 6px 0;
    }
  }

  @keyframes flipTop {
    0% { transform: rotateX(0deg); }
    50%, 100% { transform: rotateX(-90deg); }
  }

  @keyframes flipBottom {
    0%, 50% { transform: rotateX(90deg); }
    100% { transform: rotateX(0deg); }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Variables para seguimiento de tiempo
    let currentHours = -1;
    let currentMinutes = -1;
    let currentSeconds = -1;

    // Establecer tiempo de finalización
    let countDownDate;

    {% if section.settings.date_type == 'specific_date' %}
      // Usar fecha específica
      countDownDate = new Date("{{ section.settings.end_date }}").getTime();
    {% else %}
      // Usar duración desde ahora
      countDownDate = new Date();
      countDownDate.setHours(countDownDate.getHours() + {{ section.settings.duration_hours }});
      countDownDate.setMinutes(countDownDate.getMinutes() + {{ section.settings.duration_minutes }});
      countDownDate = countDownDate.getTime();
    {% endif %}

    // Si el timer es persistente, guardar en localStorage
    {% if section.settings.persistent_timer %}
      const storedEndTime = localStorage.getItem('countdownEndTime');
      if (storedEndTime) {
        countDownDate = parseInt(storedEndTime);
      } else {
        localStorage.setItem('countdownEndTime', countDownDate);
      }
    {% endif %}

    // Función para animar el cambio de un número
    function animateFlip(elementId, newValue) {
      const card = document.getElementById(elementId + '-card');
      const current = document.getElementById(elementId);
      const next = document.getElementById(elementId + '-next');

      if (!card || !current || !next) return;

      // Formatear el valor con ceros a la izquierda
      newValue = (newValue < 10) ? "0" + newValue : newValue;

      // Si el valor ya está actualizado, no hacer nada
      if (current.textContent === newValue) return;

      // Establecer el nuevo valor en la parte posterior
      next.textContent = newValue;

      // Iniciar la animación
      card.classList.add('flip');

      // Después de la animación, actualizar el valor frontal y restablecer
      setTimeout(function() {
        current.textContent = newValue;
        card.classList.remove('flip');
      }, 300);
    }

    // Actualizar contador cada segundo
    const countdown = setInterval(function() {
      const now = new Date().getTime();
      const distance = countDownDate - now;

      // Cálculo de tiempo
      const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((distance % (1000 * 60)) / 1000);

      // Animar cambios solo cuando los valores cambian
      if (hours !== currentHours) {
        animateFlip('hours', hours);
        currentHours = hours;
      }

      if (minutes !== currentMinutes) {
        animateFlip('minutes', minutes);
        currentMinutes = minutes;
      }

      if (seconds !== currentSeconds) {
        animateFlip('seconds', seconds);
        currentSeconds = seconds;
      }

      // Si el contador llega a cero
      if (distance < 0) {
        clearInterval(countdown);

        document.getElementById("hours").textContent = "00";
        document.getElementById("minutes").textContent = "00";
        document.getElementById("seconds").textContent = "00";

        {% if section.settings.hide_after_end %}
        setTimeout(function() {
          document.querySelector('.countdown-banner').style.display = 'none';
        }, 3000);
        {% endif %}

        {% if section.settings.redirect_after_end and section.settings.redirect_url != blank %}
        setTimeout(function() {
          window.location.href = "{{ section.settings.redirect_url }}";
        }, {{ section.settings.redirect_delay }} * 1000);
        {% endif %}

        {% if section.settings.persistent_timer %}
        localStorage.removeItem('countdownEndTime');
        {% endif %}
      }
    }, 1000);

    // Inicialización de valores
    const initialUpdate = setInterval(function() {
      const now = new Date().getTime();
      const distance = countDownDate - now;

      // Cálculo de tiempo
      const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((distance % (1000 * 60)) / 1000);

      // Establecer valores iniciales sin animación
      document.getElementById("hours").textContent = hours < 10 ? "0" + hours : hours;
      document.getElementById("hours-next").textContent = hours < 10 ? "0" + hours : hours;
      document.getElementById("minutes").textContent = minutes < 10 ? "0" + minutes : minutes;
      document.getElementById("minutes-next").textContent = minutes < 10 ? "0" + minutes : minutes;
      document.getElementById("seconds").textContent = seconds < 10 ? "0" + seconds : seconds;
      document.getElementById("seconds-next").textContent = seconds < 10 ? "0" + seconds : seconds;

      currentHours = hours;
      currentMinutes = minutes;
      currentSeconds = seconds;

      clearInterval(initialUpdate);
    }, 10);
  });
</script>

{% schema %}
{
  "name": "Contador Regresivo",
  "settings": [
    {
      "type": "color",
      "id": "background_color",
      "label": "Color de fondo",
      "default": "#FF001D"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Color de texto",
      "default": "#FFFFFF"
    },
    {
      "type": "text",
      "id": "title_text",
      "label": "Texto del título",
      "default": "FALTA POCO TIEMPO PARA QUE ESTA OFERTA TERMINE"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 16,
      "max": 60,
      "step": 1,
      "label": "Tamaño del título (px)",
      "default": 32
    },
    {
      "type": "select",
      "id": "date_type",
      "label": "Tipo de cuenta regresiva",
      "options": [
        {
          "value": "duration",
          "label": "Duración desde ahora"
        },
        {
          "value": "specific_date",
          "label": "Fecha específica"
        }
      ],
      "default": "duration"
    },
    {
      "type": "text",
      "id": "end_date",
      "label": "Fecha final (YYYY-MM-DD)",
      "default": "2025-12-31"
    },
    {
      "type": "number",
      "id": "duration_hours",
      "label": "Duración (horas)",
      "default": 24
    },
    {
      "type": "number",
      "id": "duration_minutes",
      "label": "Duración (minutos adicionales)",
      "default": 0
    },
    {
      "type": "checkbox",
      "id": "persistent_timer",
      "label": "Persistir temporizador entre visitas",
      "default": true
    },
    {
      "type": "text",
      "id": "hours_label",
      "label": "Etiqueta para horas",
      "default": "Horas"
    },
    {
      "type": "text",
      "id": "minutes_label",
      "label": "Etiqueta para minutos",
      "default": "Minutos"
    },
    {
      "type": "text",
      "id": "seconds_label",
      "label": "Etiqueta para segundos",
      "default": "Segundos"
    },
    {
      "type": "range",
      "id": "timer_size",
      "min": 40,
      "max": 120,
      "step": 5,
      "label": "Tamaño del temporizador (px)",
      "default": 75
    },
    {
      "type": "range",
      "id": "timer_border_radius",
      "min": 0,
      "max": 20,
      "step": 1,
      "label": "Radio de borde",
      "default": 0
    },
    {
      "type": "range",
      "id": "label_size",
      "min": 10,
      "max": 24,
      "step": 1,
      "label": "Tamaño de etiquetas (px)",
      "default": 14
    },
    {
      "type": "checkbox",
      "id": "hide_after_end",
      "label": "Ocultar al finalizar",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "redirect_after_end",
      "label": "Redirigir al finalizar",
      "default": false
    },
    {
      "type": "url",
      "id": "redirect_url",
      "label": "URL de redirección"
    },
    {
      "type": "number",
      "id": "redirect_delay",
      "label": "Retraso antes de redirigir (segundos)",
      "default": 0
    }
  ],
  "presets": [
    {
      "name": "Contador Regresivo",
      "category": "Promoción"
    }
  ]
}
{% endschema %}
